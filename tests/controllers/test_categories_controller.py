# -*- coding: utf-8 -*-

"""
spotifywebapiwithfixesandimprovementsfromsonallux

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from spotifywebapiwithfixesandimprovementsfromsonallux.api_helper import APIHelper


class CategoriesControllerTests(ControllerTestBase):

    controller = None

    @classmethod
    def setUpClass(cls):
        super(CategoriesControllerTests, cls).setUpClass()
        cls.controller = cls.client.categories
        cls.response_catcher = cls.controller.http_call_back

    # Get a list of categories used to tag items in Spotify (on, for example, the Spotify player’s “Browse” tab).
    #
    def test_get_categories(self):
        # Parameters for the API call
        locale = 'sv_SE'
        limit = 20
        offset = 0

        # Perform the API call through the SDK function
        result = self.controller.get_categories(locale, limit, offset)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


    # Get a single category used to tag items in Spotify (on, for example, the Spotify player’s “Browse” tab).
    #
    def test_get_a_category(self):
        # Parameters for the API call
        category_id = 'dinner'
        locale = 'sv_SE'

        # Perform the API call through the SDK function
        result = self.controller.get_a_category(category_id, locale)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


