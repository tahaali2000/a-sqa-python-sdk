# -*- coding: utf-8 -*-

"""
spotifywebapiwithfixesandimprovementsfromsonallux

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import os
import unittest
from tests.http_response_catcher import HttpResponseCatcher
from spotifywebapiwithfixesandimprovementsfromsonallux.configuration import Configuration, Environment
from spotifywebapiwithfixesandimprovementsfromsonallux.spotifywebapiwithfixesandimprovementsfromsonallux_client import SpotifywebapiwithfixesandimprovementsfromsonalluxClient
from spotifywebapiwithfixesandimprovementsfromsonallux.http.auth.o_auth_2 import AuthorizationCodeAuthCredentials


class ControllerTestBase(unittest.TestCase):

    """All test classes inherit from this base class. It abstracts out
    common functionality and configuration variables set up."""

    client = None
    config = None

    @classmethod
    def setUpClass(cls):
        """Class method called once before running tests in a test class."""
        cls.request_timeout = 30
        cls.assert_precision = 0.01
        cls.config = ControllerTestBase.create_configuration()
        cls.client = SpotifywebapiwithfixesandimprovementsfromsonalluxClient(config=cls.config)

    @staticmethod
    def create_configuration():
        environment = os.getenv('SPOTIFYWEBAPIWITHFIXESANDIMPROVEMENTSFROMSONALLUX_ENVIRONMENT')
        o_auth_client_id = os.getenv('SPOTIFYWEBAPIWITHFIXESANDIMPROVEMENTSFROMSONALLUX_O_AUTH_CLIENT_ID')
        o_auth_client_secret = os.getenv('SPOTIFYWEBAPIWITHFIXESANDIMPROVEMENTSFROMSONALLUX_O_AUTH_CLIENT_SECRET')
        o_auth_redirect_uri = os.getenv('SPOTIFYWEBAPIWITHFIXESANDIMPROVEMENTSFROMSONALLUX_O_AUTH_REDIRECT_URI')

        if environment is not None:
            environment = Environment[environment.upper()]
        authorization_code_auth_credentials=None
        if (o_auth_client_id is not None
                and o_auth_client_secret is not None
                and o_auth_redirect_uri is not None):
            authorization_code_auth_credentials=AuthorizationCodeAuthCredentials(
                o_auth_client_id=o_auth_client_id,
                o_auth_client_secret=o_auth_client_secret,
                o_auth_redirect_uri=o_auth_redirect_uri)


        config = Configuration(http_call_back=HttpResponseCatcher())
        return config.clone_with(
            authorization_code_auth_credentials=authorization_code_auth_credentials,
            environment=environment)

